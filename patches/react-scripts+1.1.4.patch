diff --git a/node_modules/react-scripts/config/webpack.config.dev.js b/node_modules/react-scripts/config/webpack.config.dev.js
index 9f3131b..237389f 100644
--- a/node_modules/react-scripts/config/webpack.config.dev.js
+++ b/node_modules/react-scripts/config/webpack.config.dev.js
@@ -90,7 +90,7 @@ module.exports = {
     // https://github.com/facebookincubator/create-react-app/issues/290
     // `web` extension prefixes have been added for better support
     // for React Native Web.
-    extensions: ['.web.js', '.mjs', '.js', '.json', '.web.jsx', '.jsx'],
+    extensions: ['.tsx', '.ts', '.web.js', '.mjs', '.js', '.json', '.web.jsx', '.jsx'],
     alias: {
       // @remove-on-eject-begin
       // Resolve Babel runtime relative to react-scripts.
@@ -121,34 +121,21 @@ module.exports = {
       // We are waiting for https://github.com/facebookincubator/create-react-app/issues/2176.
       // { parser: { requireEnsure: false } },
 
-      // First, run the linter.
-      // It's important to do this before Babel processes the JS.
       {
-        test: /\.(js|jsx|mjs)$/,
-        enforce: 'pre',
-        use: [
+        // "oneOf" will traverse all following loaders until one will
+        // match the requirements. When no loader matches it will fall
+        // back to the "file" loader at the end of the loader list.
+        oneOf: [
           {
+            test: /\.tsx?$/,
+            loader: require.resolve('ts-loader'),
             options: {
-              formatter: eslintFormatter,
-              eslintPath: require.resolve('eslint'),
-              // @remove-on-eject-begin
-              baseConfig: {
-                extends: [require.resolve('eslint-config-react-app')],
+              transpileOnly: true,
+              compilerOptions: {
+                noEmit: false,
               },
-              ignore: false,
-              useEslintrc: false,
-              // @remove-on-eject-end
             },
-            loader: require.resolve('eslint-loader'),
           },
-        ],
-        include: paths.appSrc,
-      },
-      {
-        // "oneOf" will traverse all following loaders until one will
-        // match the requirements. When no loader matches it will fall
-        // back to the "file" loader at the end of the loader list.
-        oneOf: [
           // "url" loader works like "file" loader except that it embeds assets
           // smaller than specified limit in bytes as data URLs to avoid requests.
           // A missing `test` is equivalent to a match.
diff --git a/node_modules/react-scripts/config/webpack.config.prod.js b/node_modules/react-scripts/config/webpack.config.prod.js
index 3b2a206..977e068 100644
--- a/node_modules/react-scripts/config/webpack.config.prod.js
+++ b/node_modules/react-scripts/config/webpack.config.prod.js
@@ -96,7 +96,7 @@ module.exports = {
     // https://github.com/facebookincubator/create-react-app/issues/290
     // `web` extension prefixes have been added for better support
     // for React Native Web.
-    extensions: ['.web.js', '.mjs', '.js', '.json', '.web.jsx', '.jsx'],
+    extensions: ['.tsx', '.ts', '.web.js', '.mjs', '.js', '.json', '.web.jsx', '.jsx'],
     alias: {
       // @remove-on-eject-begin
       // Resolve Babel runtime relative to react-scripts.
@@ -157,6 +157,16 @@ module.exports = {
         // match the requirements. When no loader matches it will fall
         // back to the "file" loader at the end of the loader list.
         oneOf: [
+          {
+            test: /\.tsx?$/,
+            loader: require.resolve('ts-loader'),
+            options: {
+              transpileOnly: true,
+              compilerOptions: {
+                noEmit: false,
+              },
+            },
+          },
           // "url" loader works just like "file" loader but it also embeds
           // assets smaller than specified size as data URLs to avoid requests.
           {
